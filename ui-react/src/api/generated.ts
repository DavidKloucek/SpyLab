/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * SpyLab
 * OpenAPI spec version: 0.1.0
 */
import { orvalMutator } from "./orvalMutator";
export interface AnalyzeBox {
  x: number;
  y: number;
  w: number;
  h: number;
  face_confidence: number;
  similar_faces: number;
}

export interface BodyAnalyzeImageApiAnalyzePost {
  file: Blob;
}

export interface BodyFindSimilarImageApiSimilarToImagePost {
  image: Blob;
  x: number;
  y: number;
  w: number;
  h: number;
}

export interface DashStats {
  face_count_total: number;
  face_count_24h: number;
  user_count_total: number;
}

export interface DetailData {
  data: FaceItemResponse;
  faces: FaceItemResponse[];
}

export interface FaceItemResponse {
  /** */
  id: number;
  fn: string;
  model: string;
  confidence: number;
  preview_path: string;
  source_filepath: string;
  x: number;
  y: number;
  w: number;
  h: number;
  preview_url: string;
  source_url: string;
}

export interface FaceSimilarItemResponse {
  /** */
  id: number;
  fn: string;
  model: string;
  confidence: number;
  preview_path: string;
  source_filepath: string;
  x: number;
  y: number;
  w: number;
  h: number;
  is_same: boolean;
  distance: number;
  preview_url: string;
  source_url: string;
}

export interface HTTPValidationError {
  detail?: ValidationError[];
}

export interface LoginRequest {
  email: string;
  password: string;
}

export interface LoginResponse {
  token: string;
  token_type: "bearer";
}

export interface MeDto {
  id: number;
  email: string;
}

export interface UploadImageResponse {
  preview_url: string;
  source_url: string;
  boxes: AnalyzeBox[];
}

export interface UserItem {
  id: number;
  email: string;
}

export type ValidationErrorLocItem = string | number;

export interface ValidationError {
  loc: ValidationErrorLocItem[];
  msg: string;
  type: string;
}

export type DetailImageApiDetailGetParams = {
  id: number;
};

export type ReadRandomApiListGetParams = {
  search?: string;
  limit?: number;
};

export type FindSimilarIdApiSimilarToIdGetParams = {
  id: number;
  model: string;
  metric?: string;
};

export type UserListApiUsersGetParams = {
  _start?: number;
  _end?: number;
};

export const getSpyLab = () => {
  /**
   * @summary Detail Image
   */
  const detailImageApiDetailGet = (params: DetailImageApiDetailGetParams) => {
    return orvalMutator<DetailData>({
      url: `/api/detail`,
      method: "GET",
      params,
    });
  };

  /**
   * @summary Read Random
   */
  const readRandomApiListGet = (params?: ReadRandomApiListGetParams) => {
    return orvalMutator<FaceItemResponse[]>({
      url: `/api/list`,
      method: "GET",
      params,
    });
  };

  /**
   * @summary Analyze Image
   */
  const analyzeImageApiAnalyzePost = (
    bodyAnalyzeImageApiAnalyzePost: BodyAnalyzeImageApiAnalyzePost
  ) => {
    const formData = new FormData();
    formData.append(`file`, bodyAnalyzeImageApiAnalyzePost.file);

    return orvalMutator<UploadImageResponse>({
      url: `/api/analyze`,
      method: "POST",
      headers: { "Content-Type": "multipart/form-data" },
      data: formData,
    });
  };

  /**
   * @summary Find Similar Id
   */
  const findSimilarIdApiSimilarToIdGet = (
    params: FindSimilarIdApiSimilarToIdGetParams
  ) => {
    return orvalMutator<FaceSimilarItemResponse[]>({
      url: `/api/similar-to-id`,
      method: "GET",
      params,
    });
  };

  /**
   * @summary Find Similar Image
   */
  const findSimilarImageApiSimilarToImagePost = (
    bodyFindSimilarImageApiSimilarToImagePost: BodyFindSimilarImageApiSimilarToImagePost
  ) => {
    const formData = new FormData();
    formData.append(`image`, bodyFindSimilarImageApiSimilarToImagePost.image);
    formData.append(
      `x`,
      bodyFindSimilarImageApiSimilarToImagePost.x.toString()
    );
    formData.append(
      `y`,
      bodyFindSimilarImageApiSimilarToImagePost.y.toString()
    );
    formData.append(
      `w`,
      bodyFindSimilarImageApiSimilarToImagePost.w.toString()
    );
    formData.append(
      `h`,
      bodyFindSimilarImageApiSimilarToImagePost.h.toString()
    );

    return orvalMutator<FaceSimilarItemResponse[]>({
      url: `/api/similar-to-image`,
      method: "POST",
      headers: { "Content-Type": "multipart/form-data" },
      data: formData,
    });
  };

  /**
   * @summary Dashboard
   */
  const dashboardApiDashboardGet = () => {
    return orvalMutator<DashStats>({ url: `/api/dashboard`, method: "GET" });
  };

  /**
   * @summary User List
   */
  const userListApiUsersGet = (params?: UserListApiUsersGetParams) => {
    return orvalMutator<UserItem[]>({
      url: `/api/users`,
      method: "GET",
      params,
    });
  };

  /**
   * @summary Login
   */
  const loginApiLoginPost = (loginRequest: LoginRequest) => {
    return orvalMutator<LoginResponse>({
      url: `/api/login`,
      method: "POST",
      headers: { "Content-Type": "application/json" },
      data: loginRequest,
    });
  };

  /**
   * @summary Get Me
   */
  const getMeApiMeGet = () => {
    return orvalMutator<MeDto>({ url: `/api/me`, method: "GET" });
  };

  /**
   * @summary Handle Http Get
   */
  const handleHttpGetGraphqlGet = () => {
    return orvalMutator<unknown>({ url: `/graphql`, method: "GET" });
  };

  /**
   * @summary Handle Http Post
   */
  const handleHttpPostGraphqlPost = () => {
    return orvalMutator<unknown>({ url: `/graphql`, method: "POST" });
  };

  return {
    detailImageApiDetailGet,
    readRandomApiListGet,
    analyzeImageApiAnalyzePost,
    findSimilarIdApiSimilarToIdGet,
    findSimilarImageApiSimilarToImagePost,
    dashboardApiDashboardGet,
    userListApiUsersGet,
    loginApiLoginPost,
    getMeApiMeGet,
    handleHttpGetGraphqlGet,
    handleHttpPostGraphqlPost,
  };
};
export type DetailImageApiDetailGetResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSpyLab>["detailImageApiDetailGet"]>>
>;
export type ReadRandomApiListGetResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSpyLab>["readRandomApiListGet"]>>
>;
export type AnalyzeImageApiAnalyzePostResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getSpyLab>["analyzeImageApiAnalyzePost"]>
  >
>;
export type FindSimilarIdApiSimilarToIdGetResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getSpyLab>["findSimilarIdApiSimilarToIdGet"]>
  >
>;
export type FindSimilarImageApiSimilarToImagePostResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<typeof getSpyLab>["findSimilarImageApiSimilarToImagePost"]
    >
  >
>;
export type DashboardApiDashboardGetResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSpyLab>["dashboardApiDashboardGet"]>>
>;
export type UserListApiUsersGetResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSpyLab>["userListApiUsersGet"]>>
>;
export type LoginApiLoginPostResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSpyLab>["loginApiLoginPost"]>>
>;
export type GetMeApiMeGetResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSpyLab>["getMeApiMeGet"]>>
>;
export type HandleHttpGetGraphqlGetResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSpyLab>["handleHttpGetGraphqlGet"]>>
>;
export type HandleHttpPostGraphqlPostResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getSpyLab>["handleHttpPostGraphqlPost"]>>
>;
